{"version":3,"sources":["tokenBucketLimiter.js"],"names":["TokenBucketLimiter","RateLimiter","bucketSize","tokensPerInterval","interval","Date","now","lastDrip","deltaMs","Math","tokensToAdd","count","tokensNeeded"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACaA,kB;;;;;AACX,WAAA,kBAAA,CAAA,IAAA,EAIG;AAAA,QAAA,KAAA;;AAAA,QAHDE,UAGC,GAAA,IAAA,CAHDA,UAGC;AAAA,QAFDC,iBAEC,GAAA,IAAA,CAFDA,iBAEC;AAAA,QADDC,QACC,GAAA,IAAA,CADDA,QACC;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,CAAA;;AACD,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM;AACJD,MAAAA,iBAAiB,EADb,iBAAA;AAEJC,MAAAA,QAAQ,EAARA;AAFI,KAAN,CAAA;AAIA,IAAA,KAAA,CAAA,UAAA,GALC,UAKD,CALC,CAK6B;;AAE9B,IAAA,KAAA,CAAA,MAAA,GAAc,KAAA,CAPb,UAOD,CAPC,CAO8B;;AAE/B,IAAA,KAAA,CAAA,eAAA,GAAuB,CAACC,IAAI,CAA5B,GAAwBA,EAAD,CAAvB;AATC,WAAA,KAAA;AAUF;;;;WAED,SAAA,UAAA,GAAa;AACX,UAAMC,GAAG,GAAGD,IAAI,CAAhB,GAAYA,EAAZ;AACA,UAAME,QAAQ,GAAG,KAAA,eAAA,CAAjB,CAAiB,CAAjB;AACA,UAAIC,OAAO,GAAGC,IAAI,CAAJA,GAAAA,CAASH,GAAG,GAAZG,QAAAA,EAAd,CAAcA,CAAd;AACA,WAAA,eAAA,GAAuB,CAAvB,GAAuB,CAAvB;AACA,UAAMC,WAAW,GAAGF,OAAO,IAAI,KAAA,iBAAA,GAAyB,KAAxD,QAA2B,CAA3B;AACA,WAAA,MAAA,GAAcC,IAAI,CAAJA,GAAAA,CAAS,KAAA,MAAA,GAATA,WAAAA,EAAoC,KAAlD,UAAcA,CAAd;AACA,aAAOA,IAAI,CAAJA,KAAAA,CAAW,KAAlB,MAAOA,CAAP;AACD;;;WAED,SAAA,iBAAA,GAA6B;AAAA,UAAXE,KAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;;AAC3B,UAAIA,KAAK,GAAG,KAAZ,UAAA,EAA6B;AAC3B,cAAM,IAAA,KAAA,CAAA,iBAAA,MAAA,CAAA,KAAA,EAAA,uCAAA,EAAA,MAAA,CAAwE,KAA9E,UAAM,CAAA,CAAN;AACD;;AAED,WAAA,UAAA;AACA,UAAIC,YAAY,GAAGD,KAAK,GAAG,KAA3B,MAAA;;AAEA,UAAIC,YAAY,IAAhB,CAAA,EAAuB;AACrB,eAAA,CAAA;AACD;;AAED,aAAOH,IAAI,CAAJA,IAAAA,CAAUG,YAAY,IAAI,KAAA,QAAA,GAAgB,KAAjD,iBAA6B,CAAtBH,CAAP;AACD;;;WAED,SAAA,KAAA,GAAQ;AACN,WAAA,MAAA,GAAc,KAAd,UAAA;AACA,WAAA,eAAA,GAAuB,CAACJ,IAAI,CAA5B,GAAwBA,EAAD,CAAvB;AACD;;;;EA7CqCJ,YAAAA,CAAAA,SAAAA,C","sourcesContent":["import RateLimiter from './rateLimiter.js';\nexport class TokenBucketLimiter extends RateLimiter {\n  constructor({\n    bucketSize,\n    tokensPerInterval,\n    interval\n  }) {\n    super({\n      tokensPerInterval,\n      interval\n    });\n    this.bucketSize = bucketSize; // we start with the bucket full\n\n    this.tokens = this.bucketSize; // last drip\n\n    this.tokensRemovedAt = [Date.now()];\n  }\n\n  dripTokens() {\n    const now = Date.now();\n    const lastDrip = this.tokensRemovedAt[0];\n    let deltaMs = Math.max(now - lastDrip, 0);\n    this.tokensRemovedAt = [now];\n    const tokensToAdd = deltaMs * (this.tokensPerInterval / this.interval);\n    this.tokens = Math.min(this.tokens + tokensToAdd, this.bucketSize);\n    return Math.floor(this.tokens);\n  }\n\n  getDelayForTokens(count = 1) {\n    if (count > this.bucketSize) {\n      throw new Error(`Cannot supply ${count} tokens at once (max is bucketSize = ${this.bucketSize}`);\n    }\n\n    this.dripTokens();\n    let tokensNeeded = count - this.tokens;\n\n    if (tokensNeeded <= 0) {\n      return 0;\n    }\n\n    return Math.ceil(tokensNeeded * (this.interval / this.tokensPerInterval));\n  }\n\n  reset() {\n    this.tokens = this.bucketSize;\n    this.tokensRemovedAt = [Date.now()];\n  }\n\n}"],"file":"tokenBucketLimiter.js"}