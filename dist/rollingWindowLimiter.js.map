{"version":3,"sources":["../src/rollingWindowLimiter.mjs"],"names":["RateLimiter","constructor","interval","tokensPerInterval","dripTokens","now","Date","getDelayForTokens","count","tokensNeeded","newTokens","delayMs"],"mappings":"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","sourcesContent":["import RateLimiter from './rateLimiter.mjs'\r\n\r\nexport default class RollingWindowLimiter extends RateLimiter {\r\n  constructor ({ tokensPerInterval, interval }) {\r\n    super({ tokensPerInterval, interval })\r\n    this.tokens = this.tokensPerInterval\r\n  }\r\n\r\n  dripTokens() {\r\n    const now = Date.now()\r\n    while (this.tokensRemovedAt.length > 0) {\r\n      if (this.tokensRemovedAt[0][0] + this.interval > now) {\r\n        break\r\n      }\r\n\r\n      this.tokens += this.tokensRemovedAt[0][1]\r\n      this.tokensRemovedAt.shift()\r\n    }\r\n\r\n    if (this.tokens > this.tokensPerInterval) {\r\n      this.tokens = this.tokensPerInterval\r\n    }\r\n\r\n    return this.tokens\r\n  }\r\n\r\n  getDelayForTokens(count = 1) {\r\n    if (count > this.tokensPerInterval) {\r\n      throw new Error(`Cannot supply ${count} tokens at once (max is tokensPerInterval = ${this.tokensPerInterval}`)\r\n    }\r\n\r\n    this.dripTokens()\r\n    let tokensNeeded = count - this.tokens\r\n    if (tokensNeeded <= 0) {\r\n      return 0\r\n    }\r\n\r\n    const now  = Date.now()\r\n    for (const newTokens of this.tokensRemovedAt) {\r\n      tokensNeeded -= newTokens[1]\r\n      if (tokensNeeded <= 0) {\r\n        const delayMs = newTokens[0] + this.interval - now\r\n        return delayMs\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"file":"rollingWindowLimiter.js"}