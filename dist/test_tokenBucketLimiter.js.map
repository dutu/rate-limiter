{"version":3,"sources":["../test/test_tokenBucketLimiter.js"],"names":["expect","chai","delay","setTimeout","resolve","describe","it","limiter","TokenBucketLimiter","bucketSize","tokensPerInterval","interval","removedTokens","tokens"],"mappings":"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","sourcesContent":["import chai from 'chai'\nconst expect = chai.expect\n\nimport { TokenBucketLimiter } from '../index.mjs'\n\n\nconst delay =  (ms) => new Promise((resolve) => setTimeout(() => resolve(), ms))\n\ndescribe(\"Constructor\", function () {\n  it('should create a new instance', function () {\n    const limiter = new TokenBucketLimiter({ bucketSize: 10, tokensPerInterval: 1, interval: 'second' })\n    expect(limiter).to.be.an.instanceOf(TokenBucketLimiter)\n  })\n})\n\ndescribe(\"getTokens()\", function () {\n  it('should return correct number of tokens', function () {\n    const limiter = new TokenBucketLimiter({ bucketSize: 10, tokensPerInterval: 1, interval: 'second' })\n    expect(limiter.getTokens()).to.be.equal(10)\n  })\n})\n\ndescribe(\"tryRemoveTokens()\", function () {\n  it('should remove correct number of tokens', async function () {\n    const limiter = new TokenBucketLimiter({ bucketSize: 10, tokensPerInterval: 2, interval: 'second' })\n    let removedTokens = limiter.tryRemoveTokens(8)\n    expect(removedTokens).to.be.equal(true)\n    expect(limiter.getTokens()).to.be.equal(2)\n\n    await delay(  900)\n    expect(limiter.getTokens()).to.be.equal(3)\n\n    await delay(  100)\n    expect(limiter.getTokens()).to.be.equal(4)\n    removedTokens = limiter.tryRemoveTokens(20)\n    expect(removedTokens).to.be.equal(false)\n    expect(limiter.getTokens()).to.be.equal(4)\n\n    await delay(2000 - 100)\n    expect(limiter.getTokens()).to.be.equal(7)\n\n    await delay(100)\n    expect(limiter.getTokens()).to.be.equal(8)\n\n    removedTokens = limiter.tryRemoveTokens(0)\n    expect(removedTokens).to.be.equal(true)\n    expect(limiter.getTokens()).to.be.equal(8)\n  })\n})\n\ndescribe(\"awaitTokens()\", function () {\n  it('should await right number of tokens', async function () {\n    const limiter = new TokenBucketLimiter({ bucketSize: 10, tokensPerInterval: 3, interval: 'second' })\n    let removedTokens = limiter.tryRemoveTokens(4)\n    expect(removedTokens).to.be.equal(true)\n    expect(limiter.getTokens()).to.be.equal(6)\n\n    let tokens = await limiter.awaitTokens(2)\n    expect(limiter.getTokens()).to.be.equal(6)\n    expect(tokens).to.be.equal(6)\n\n\n    tokens = await limiter.awaitTokens(9)\n    expect(limiter.getTokens()).to.be.equal(9)\n    expect(tokens).to.be.equal(9)\n  })\n})\n\n"],"file":"test_tokenBucketLimiter.js"}