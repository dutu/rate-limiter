{"version":3,"sources":["rateLimiter.js"],"names":["RateLimiter","tokensPerInterval","interval","stopped","Math","count","Date","delayMs","setTimeout","resolve","empty"],"mappings":"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","sourcesContent":["export default class RateLimiter {\n  constructor({\n    tokensPerInterval,\n    interval,\n    stopped\n  }) {\n    this.tokensPerInterval = tokensPerInterval;\n    this._isStopped = stopped;\n\n    if (typeof interval === 'string') {\n      switch (interval) {\n        case 'sec':\n        case 'second':\n          {\n            this.interval = 1000;\n            break;\n          }\n\n        case 'min':\n        case 'minute':\n          {\n            this.interval = 1000 * 60;\n            break;\n          }\n\n        case 'hr':\n        case 'hour':\n          {\n            this.interval = 1000 * 60 * 60;\n            break;\n          }\n\n        case 'day':\n          {\n            this.interval = 1000 * 60 * 60 * 24;\n            break;\n          }\n\n        default:\n          throw new Error('Invalid interval ' + interval);\n      }\n    } else {\n      this.interval = interval;\n    }\n\n    this.tokensRemovedAt = [];\n    this.awaitingRestart = new Set();\n  }\n\n  dripTokens() {\n    throw new Error(`dripTokens() not implemented`);\n  }\n\n  getDelayForTokens() {\n    throw new Error(`getDelayForTokens() not implemented`);\n  }\n\n  getTokens() {\n    this.dripTokens();\n    return Math.floor(this.tokens);\n  }\n\n  tryRemoveTokens(count) {\n    this.dripTokens();\n\n    if (count > this.tokens) {\n      return false;\n    }\n\n    this.tokens -= count;\n    this.tokensRemovedAt.push([Date.now(), count]);\n    return true;\n  }\n\n  async awaitTokens(count = 1) {\n    if (this._isStopped) {\n      await new Promise(resolve => this.awaitingRestart.add(resolve));\n    }\n\n    let delayMs = this.getDelayForTokens(count);\n\n    if (delayMs === 0) {\n      return Math.floor(this.tokens);\n    }\n\n    await new Promise(resolve => setTimeout(() => resolve(), delayMs));\n    return this.awaitTokens(count);\n  }\n\n  reset() {\n    this.awaitingRestart.forEach(resolve => resolve());\n  }\n\n  stop(empty = true) {\n    this._isStopped = true;\n\n    if (empty) {\n      this.tryRemoveTokens(this.getTokens());\n    }\n  }\n\n  restart() {\n    this._isStopped = false;\n  }\n\n  get isStopped() {\n    return this._isStopped;\n  }\n\n}"],"file":"rateLimiter.js"}